<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AnimalProtection.Api</name>
    </assembly>
    <members>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.GetAllCooperantes(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de trámites.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de cooperantes.</returns>
            <response code="200">Devuelve la lista de cooperants paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran cooperantes.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.GetCooperanteById(System.Guid)">
            <summary>
            Obtiene un cooperante por su ID.
            </summary>
            <param name="id">ID del cooperante.</param>
            <returns>El cooperante correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.CreateCooperante(AnimalProtection.Domain.Dto.CooperantesCreateRecord)">
            <summary>
            Crea un nuevo cooperante.
            </summary>
            <param name="cooperantesCreateRecord">Datos del cooperante a crear.</param>
            <returns>El cooperante creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.UpdateCooperante(AnimalProtection.Domain.Dto.CooperantesUpdateRecord)">
            <summary>
            Actualiza un cooperante existente.
            </summary>
            <param name="cooperantesUpdateRecord">Datos actualizados del cooperante.</param>
            <returns>El cooperante actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.DeleteCooperante(System.Guid)">
            <summary>
            Elimina un cooperante por su ID.
            </summary>
            <param name="id">ID del cooperante a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.GetAllTramites(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de trámites.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de trámites.</returns>
            <response code="200">Devuelve la lista de trámites paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran trámites.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.GetTramiteById(System.Guid)">
            <summary>
            Obtiene un trámite por su ID.
            </summary>
            <param name="id">ID del trámite.</param>
            <returns>El trámite correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.CreateTramite(AnimalProtection.Domain.Dto.TramiteCreateRecord)">
            <summary>
            Crea un nuevo trámite.
            </summary>
            <param name="tramiteCreateRecord">Datos del trámite a crear.</param>
            <returns>El trámite creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.UpdateTramite(AnimalProtection.Domain.Dto.TramiteUpdateRecord)">
            <summary>
            Actualiza un trámite existente.
            </summary>
            <param name="tramiteUpdateRecord">Datos actualizados del trámite.</param>
            <returns>El trámite actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.DeleteTramite(System.Guid)">
            <summary>
            Elimina un trámite por su ID.
            </summary>
            <param name="id">ID del trámite a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.UsuarioController.GetAll">
            <summary>
            Obtiene todos los usuarios registrados.
            </summary>
            <returns>Una lista de usuarios.</returns>
            <response code="200">Devuelve la lista de usuarios.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran usuarios.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.UsuarioController.GetUserByEmail(System.String)">
            <summary>
            Obtiene un usuario por su dirección de correo electrónico.
            </summary>
            <param name="email">La dirección de correo electrónico del usuario.</param>
            <returns>El usuario correspondiente al correo electrónico.</returns>
            <response code="200">Devuelve el usuario encontrado.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentra el usuario.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.UsuarioV2Controller.GetAll">
            <summary>
            Obtiene todos los usuarios registrados.
            </summary>
            <returns>Una lista de usuarios.</returns>
            <response code="200">Devuelve la lista de usuarios.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran usuarios.</response>
        </member>
    </members>
</doc>
