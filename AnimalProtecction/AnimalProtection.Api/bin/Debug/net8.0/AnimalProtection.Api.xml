<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AnimalProtection.Api</name>
    </assembly>
    <members>
        <member name="M:AnimalProtection.Api.Controller.AdopcionesController.GetAllAdopciones(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de adopciones.
            </summary>
            <param name="pageNumber">N�mero de p�gina.</param>
            <param name="pageSize">Tama�o de p�gina.</param>
            <returns>Una lista paginada de adopciones.</returns>
            <response code="200">Devuelve la lista de adopciones paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran adopciones.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.AdopcionesController.GetAdopcionById(System.Guid)">
            <summary>
            Obtiene un adopcion por su ID.
            </summary>
            <param name="id">ID del adopcion.</param>
            <returns>El adopcion correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.AdopcionesController.CreateAdopcion(AnimalProtection.Domain.Dto.AdopcionesCreateRecord)">
            <summary>
            Crea un nuevo adopcion.
            </summary>
            <param name="adopcionesCreateRecord">Datos de la adopcion a crear.</param>
            <returns>La adopcion creada.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.AdopcionesController.UpdateAdopcion(AnimalProtection.Domain.Dto.AdopcionesUpdateRecord)">
            <summary>
            Actualiza un adopcion existente.
            </summary>
            <param name="adopcionesUpdateRecord">Datos actualizados de la adopcion.</param>
            <returns>La adopcion actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.AdopcionesController.DeleteAdopcion(System.Guid)">
            <summary>
            Elimina un adopcion por su ID.
            </summary>
            <param name="id">ID de la adopcion a eliminar.</param>
            <returns>Un resultado indicando si la eliminaci�n fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.ArchivoController.GetAllArchivos(System.Int32,System.Int32)">
            <summary>
            Listar archivos activos (Estaactivo = true) con paginación.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.ArchivoController.GetArchivoById(System.Guid)">
            <summary>
            Obtiene un archivo por su ID.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.ArchivoController.CreateArchivo(AnimalProtection.Domain.Dto.ArchivoCreateRecord)">
            <summary>
            Crea un nuevo archivo.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.ArchivoController.UpdateArchivo(AnimalProtection.Domain.Dto.ArchivoUpdateRecord)">
            <summary>
            Actualiza un archivo existente.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.ArchivoController.DeleteArchivo(System.Guid)">
            <summary>
            Elimina lógicamente un archivo (Estaactivo = false).
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CampanaController.GetAllCampanas(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de campañas activas.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de campañas.</returns>
            <response code="200">Devuelve la lista de campañas paginadas.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran campañas.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CampanaController.GetCampanaById(System.Guid)">
            <summary>
            Obtiene una campaña por su ID.
            </summary>
            <param name="id">ID de la campaña.</param>
            <returns>La campaña correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CampanaController.CreateCampana(AnimalProtection.Domain.Dto.CampanaCreateRecord)">
            <summary>
            Crea una nueva campaña.
            </summary>
            <param name="campanaCreateRecord">Datos de la campaña a crear.</param>
            <returns>La campaña creada.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CampanaController.UpdateCampana(System.Guid,AnimalProtection.Domain.Dto.CampanaUpdateRecord)">
            <summary>
            Actualiza una campaña existente.
            </summary>
            <param name="id">ID de la campaña a actualizar.</param>
            <param name="campanaUpdateRecord">Datos actualizados de la campaña.</param>
            <returns>La campaña actualizada.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CampanaController.DeleteCampana(System.Guid)">
            <summary>
            Elimina lógicamente una campaña.
            </summary>
            <param name="id">ID de la campaña a eliminar.</param>
            <returns>True si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.GetAllCooperantes(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de tr�mites.
            </summary>
            <param name="pageNumber">N�mero de p�gina.</param>
            <param name="pageSize">Tama�o de p�gina.</param>
            <returns>Una lista paginada de cooperantes.</returns>
            <response code="200">Devuelve la lista de cooperants paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran cooperantes.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.GetCooperanteById(System.Guid)">
            <summary>
            Obtiene un cooperante por su ID.
            </summary>
            <param name="id">ID del cooperante.</param>
            <returns>El cooperante correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.CreateCooperante(AnimalProtection.Domain.Dto.CooperantesCreateRecord)">
            <summary>
            Crea un nuevo cooperante.
            </summary>
            <param name="cooperantesCreateRecord">Datos del cooperante a crear.</param>
            <returns>El cooperante creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.UpdateCooperante(AnimalProtection.Domain.Dto.CooperantesUpdateRecord)">
            <summary>
            Actualiza un cooperante existente.
            </summary>
            <param name="cooperantesUpdateRecord">Datos actualizados del cooperante.</param>
            <returns>El cooperante actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.CooperantesController.DeleteCooperante(System.Guid)">
            <summary>
            Elimina un cooperante por su ID.
            </summary>
            <param name="id">ID del cooperante a eliminar.</param>
            <returns>Un resultado indicando si la eliminaci�n fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.DatosInstitucionController.GetAllDatosInstitucion(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de datos de institución.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de datos de institución.</returns>
            <response code="200">Devuelve la lista de datos de institución paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran datos de institución.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.DatosInstitucionController.GetDatosInstitucionById">
            <summary>
            Obtiene un dato de institución por su ID.
            </summary>
            <param name="id">ID de la institución.</param>
            <returns>El dato de institución correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.DatosInstitucionController.CreateDatosInstitucion(DatosInstitucionCreateRecord)">
            <summary>
            Crea un nuevo dato de institución.
            </summary>
            <param name="datosInstitucionCreateRecord">Datos de institución a crear.</param>
            <returns>Institución creada.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.DatosInstitucionController.UpdateDatosInstitucion(DatosInstitucionUpdateRecord)">
            <summary>
            Actualiza un dato de institución existente.
            </summary>
            <param name="datosInstitucionUpdateRecord">Datos actualizados de la institución.</param>
            <returns>Institución actualizada.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.DatosInstitucionController.DeleteDatosInstitucion(System.Guid)">
            <summary>
            Elimina un dato de institución existente.
            </summary>
            <param name="id">ID de la institución.</param>
            <returns>Indica si la institución fue eliminada correctamente.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EspecieController.GetAllEspecies(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de Especies.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de Especies.</returns>
            <response code="200">Devuelve la lista de Especies paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran Especies.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EspecieController.GetEspecieById(System.Guid)">
            <summary>
            Obtiene un especie por su ID.
            </summary>
            <param name="id">ID del especie.</param>
            <returns>La especie correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EspecieController.CreateEspecie(AnimalProtection.Domain.Dto.EspecyCreateRecord)">
            <summary>
            Crea un nuevo especie.
            </summary>
            <returns>El especie creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EspecieController.UpdateEspecie(AnimalProtection.Domain.Dto.EspecyUpdateRecord)">
            <summary>
            Actualiza un especie existente.
            </summary>
            <returns>El especie actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EspecieController.DeleteEspecie(System.Guid)">
            <summary>
            Elimina un especie por su ID.
            </summary>
            <param name="id">ID del especie a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EstadostramiteController.GetAllEstadostramites(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de estadostramite.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de trámites.</returns>
            <response code="200">Devuelve la lista de estadostramite paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran estadostramite.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EstadostramiteController.GetEstadostramiteById(System.Guid)">
            <summary>
            Obtiene un estadostramite por su ID.
            </summary>
            <param name="id">ID del estadostramite.</param>
            <returns>El estadostramite correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EstadostramiteController.CreateEstadostramite(AnimalProtection.Domain.Dto.EstadostramiteCreateRecord)">
            <summary>
            Crea un nuevo estadostramite.
            </summary>
            <param name="tramiteCreateRecord">Datos del estadostramite a crear.</param>
            <returns>El estadostramite creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EstadostramiteController.UpdateEstadostramite(AnimalProtection.Domain.Dto.EstadostramiteUpdateRecord)">
            <summary>
            Actualiza un estadostramite existente.
            </summary>
            <param name="tramiteUpdateRecord">Datos actualizados del estadostramite.</param>
            <returns>El estadostramite actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.EstadostramiteController.DeleteEstadostramite(System.Guid)">
            <summary>
            Elimina un estadostramite por su ID.
            </summary>
            <param name="id">ID del estadostramite a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.GeneroController.GetAllGeneros(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de trámites.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de cooperantes.</returns>
            <response code="200">Devuelve la lista de cooperants paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran cooperantes.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.GeneroController.GetGeneroById(System.Guid)">
            <summary>
            Obtiene un genero por su ID.
            </summary>
            <param name="id">ID del genero.</param>
            <returns>El genero correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.GeneroController.CreateGenero(AnimalProtection.Domain.Dto.GeneroCreateRecord)">
            <summary>
            Crea un nuevo genero.
            </summary>
            <returns>El genero creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.GeneroController.UpdateGenero(AnimalProtection.Domain.Dto.GeneroUpdateRecord)">
            <summary>
            Actualiza un genero existente.
            </summary>
            <returns>El genero actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.GeneroController.DeleteGenero(System.Guid)">
            <summary>
            Elimina un genero por su ID.
            </summary>
            <param name="id">ID del genero a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MascotaController.GetAllMascotas(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de Mascotas.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de Mascotas.</returns>
            <response code="200">Devuelve la lista de Mascotas paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran Mascotas.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MascotaController.GetMascotaById(System.Guid)">
            <summary>
            Obtiene una mascota por su ID.
            </summary>
            <param name="id">ID de la mascota.</param>
            <returns>El mascota correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MascotaController.CreateMascota(AnimalProtection.Domain.Dto.MascotaCreateRecord)">
            <summary>
            Crea un nuevo mascota.
            </summary>
            <returns>El mascota creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MascotaController.UpdateMascota(AnimalProtection.Domain.Dto.MascotaUpdateRecord)">
            <summary>
            Actualiza una mascota existente.
            </summary>
            <returns>La mascota actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MascotaController.DeleteMascota(System.Guid)">
            <summary>
            Elimina un mascota por su ID.
            </summary>
            <param name="id">ID de la mascota a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MenuController.GetAllMenus(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de menus.
            </summary>
            <param name="pageNumber">Numero de pagina.</param>
            <param name="pageSize">Tamanio de pagina.</param>
            <returns>Una lista paginada de menus.</returns>
            <response code="200">Devuelve la lista de menus paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran menus.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MenuController.GetMenuById(System.Guid)">
            <summary>
            Obtiene un menu por su ID.
            </summary>
            <param name="id">ID del menu.</param>
            <returns>El menu correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MenuController.CreateMenu(AnimalProtection.Domain.Dto.MenuCreateRecord)">
            <summary>
            Crea un nuevo menu.
            </summary>
            <param name="menuCreateRecord">Datos del menu a crear.</param>
            <returns>El menu creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MenuController.UpdateMenu(AnimalProtection.Domain.Dto.MenuUpdateRecord)">
            <summary>
            Actualiza un menu existente.
            </summary>
            <param name="menuUpdateRecord">Datos actualizados del menu.</param>
            <returns>El menu actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.MenuController.DeleteMenu(System.Guid)">
            <summary>
            Elimina un menu por su ID.
            </summary>
            <param name="id">ID del menu a eliminar.</param>
            <returns>Un resultado indicando si la eliminacion fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.PreguntasFrecuenteController.GetAllPreguntasFrecuente(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de Preguntas Frecuentes.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de Preguntas Frecuentes.</returns>
            <response code="200">Devuelve la lista de Preguntas Frecuentes paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran Preguntas Frecuentes.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.PreguntasFrecuenteController.GetPreguntaFrecuenteById(System.Guid)">
            <summary>
            Obtiene un  Pregunta Frecuente por su ID.
            </summary>
            <param name="id">ID del Pregunta Frecuente.</param>
            <returns>El  Pregunta Frecuente correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.PreguntasFrecuenteController.CreatePreguntaFrecuente(AnimalProtection.Domain.Dto.PreguntasFrecuenteCreateRecord)">
            <summary>
            Crea un nuevo  Pregunta Frecuente.
            </summary>
            <param name="preguntaFrecuenteCreateRecord">Datos del Pregunta Frecuente a crear.</param>
            <returns>El Pregunta Frecuente creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.PreguntasFrecuenteController.UpdatePreguntaFrecuente(AnimalProtection.Domain.Dto.PreguntasFrecuenteUpdateRecord)">
            <summary>
            Actualiza un Pregunta Frecuente existente.
            </summary>
            <param name="preguntaFrecuenteUpdateRecord">Datos actualizados del Pregunta Frecuente.</param>
            <returns>El Pregunta Frecuente actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.PreguntasFrecuenteController.DeletePreguntaFrecuente(System.Guid)">
            <summary>
            Elimina un Pregunta Frecuente por su ID.
            </summary>
            <param name="id">ID del Pregunta Frecuente a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RazaController.GetAllRazas(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de Razas.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de Razas.</returns>
            <response code="200">Devuelve la lista de Razas paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran Razas.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RazaController.GetRazaById(System.Guid)">
            <summary>
            Obtiene una raza por su ID.
            </summary>
            <param name="id">ID de la raza.</param>
            <returns>La raza correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RazaController.CreateRaza(AnimalProtection.Domain.Dto.RazaCreateRecord)">
            <summary>
            Crea una nueva raza.
            </summary>
            <returns>La raza creada.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RazaController.UpdateRaza(AnimalProtection.Domain.Dto.RazaUpdateRecord)">
            <summary>
            Actualiza un raza existente.
            </summary>
            <returns>La raza actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RazaController.DeleteRaza(System.Guid)">
            <summary>
            Elimina un raza por su ID.
            </summary>
            <param name="id">ID del raza a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RolController.GetAllRol(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de roles.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de roles.</returns>
            <response code="200">Devuelve la lista de roles paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran roles.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RolController.GetRolById(System.Guid)">
            <summary>
            Obtiene un rol por su ID.
            </summary>
            <param name="id">ID del rol.</param>
            <returns>Un rol.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RolController.CreateRol(RolCreateRecord)">
            <summary>
            Crea un nuevo rol.
            </summary>
            <param name="rolCreateRecord">Rol a crear.</param>
            <returns>Rol creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RolController.UpdateRol(RolUpdateRecord)">
            <summary>
            Actualiza un rol.
            </summary>
            <param name="rolUpdateRecord">Rol a actualizar.</param>
            <returns>Rol actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.RolController.DeleteRol(System.Guid)">
            <summary>
            Elimina un rol.
            </summary>
            <param name="id">ID del rol.</param>
            <returns>Respuesta de eliminación.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TiposArchivoController.GetAllTiposArchivo(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de Tipos de Archivo activos.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TiposArchivoController.GetTiposArchivoById(System.Guid)">
            <summary>
            Obtiene un Tipo de Archivo por su ID.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TiposArchivoController.CreateTiposArchivo(AnimalProtection.Domain.Dto.TiposArchivoCreateRecord)">
            <summary>
            Crea un nuevo Tipo de Archivo.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TiposArchivoController.UpdateTiposArchivo(AnimalProtection.Domain.Dto.TiposArchivoUpdateRecord)">
            <summary>
            Actualiza un Tipo de Archivo existente.
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TiposArchivoController.DeleteTiposArchivo(System.Guid)">
            <summary>
            Elimina lógicamente un Tipo de Archivo (marca Estaactivo = false).
            </summary>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TipostramiteController.GetAllTipostramites(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de tipostramite.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de trámites.</returns>
            <response code="200">Devuelve la lista de tipostramite paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran tipostramite.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TipostramiteController.GetTipostramiteById(System.Guid)">
            <summary>
            Obtiene un tipostramite por su ID.
            </summary>
            <param name="id">ID del tipostramite.</param>
            <returns>El tipostramite correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TipostramiteController.CreateTipostramite(AnimalProtection.Domain.Dto.TiposTramiteCreateRecord)">
            <summary>
            Crea un nuevo tipostramite.
            </summary>
            <param name="tramiteCreateRecord">Datos del tipostramite a crear.</param>
            <returns>El tipostramite creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TipostramiteController.UpdateTipostramite(AnimalProtection.Domain.Dto.TiposTramiteUpdateRecord)">
            <summary>
            Actualiza un tipostramite existente.
            </summary>
            <param name="tramiteUpdateRecord">Datos actualizados del tipostramite.</param>
            <returns>El tipostramite actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TipostramiteController.DeleteTipostramite(System.Guid)">
            <summary>
            Elimina un tipostramite por su ID.
            </summary>
            <param name="id">ID del tipostramite a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.GetAllTramites(System.Int32,System.Int32)">
            <summary>
            Obtiene una lista paginada de trámites.
            </summary>
            <param name="pageNumber">Número de página.</param>
            <param name="pageSize">Tamaño de página.</param>
            <returns>Una lista paginada de trámites.</returns>
            <response code="200">Devuelve la lista de trámites paginados.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran trámites.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.GetTramiteById(System.Guid)">
            <summary>
            Obtiene un trámite por su ID.
            </summary>
            <param name="id">ID del trámite.</param>
            <returns>El trámite correspondiente al ID proporcionado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.CreateTramite(AnimalProtection.Domain.Dto.TramiteCreateRecord)">
            <summary>
            Crea un nuevo trámite.
            </summary>
            <param name="tramiteCreateRecord">Datos del trámite a crear.</param>
            <returns>El trámite creado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.UpdateTramite(AnimalProtection.Domain.Dto.TramiteUpdateRecord)">
            <summary>
            Actualiza un trámite existente.
            </summary>
            <param name="tramiteUpdateRecord">Datos actualizados del trámite.</param>
            <returns>El trámite actualizado.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.TramiteController.DeleteTramite(System.Guid)">
            <summary>
            Elimina un trámite por su ID.
            </summary>
            <param name="id">ID del trámite a eliminar.</param>
            <returns>Un resultado indicando si la eliminación fue exitosa.</returns>
        </member>
        <member name="M:AnimalProtection.Api.Controller.UsuarioController.GetAll">
            <summary>
            Obtiene todos los usuarios registrados.
            </summary>
            <returns>Una lista de usuarios.</returns>
            <response code="200">Devuelve la lista de usuarios.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran usuarios.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.UsuarioController.GetUserByEmail(System.String)">
            <summary>
            Obtiene un usuario por su dirección de correo electrónico.
            </summary>
            <param name="email">La dirección de correo electrónico del usuario.</param>
            <returns>El usuario correspondiente al correo electrónico.</returns>
            <response code="200">Devuelve el usuario encontrado.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentra el usuario.</response>
        </member>
        <member name="M:AnimalProtection.Api.Controller.UsuarioV2Controller.GetAll">
            <summary>
            Obtiene todos los usuarios registrados.
            </summary>
            <returns>Una lista de usuarios.</returns>
            <response code="200">Devuelve la lista de usuarios.</response>
            <response code="400">Si ocurre un error al procesar la solicitud.</response>
            <response code="404">Si no se encuentran usuarios.</response>
        </member>
    </members>
</doc>
